% Encoding: UTF-8

@article{Fuetterer.2020,
	author = {Fuetterer, Andreas T.},
	year = {2020},
	title = {Vorlesung Smart Cities - Smart Governance}
}

@Online{SmartCityKompass.2020,
  author   = {Smart City Kompass},
  title    = {Smart City Kompass},
  url      = {https://www.smartcity-kompass.de/advanced-search/?filter_search_action%5B%5D=&filter_search_type%5B%5D=&advanced_city=hamburg&submit=SUCHE+SMARTCITY-PROJEKTE&wpestate_regular_search_nonce=403f8058ab&_wp_http_referer=%2F},
  urldate  = {2020-06-14}
}

@Online{Senat.2012,
  author   = {Senat Hamburg},
  year     = {2012},
  title    = {Hamburgisches Transparenzgesetz},
  url      = {https://www.luewu.de/docs/gvbl/2012/29.pdf},
  urldate  = {2020-06-14}
}



% Beispielliteratur - article
@article{Aarsten.1996,
	author = {Aarsten, Amund and Brugali, Davide and Menga, Giuseppe},
	year = {1996},
	title = {Patterns for three-tier client/server applications},
	volume = {4},
	number = {6},
	journal = {Proceedings of Pattern Languages of Programs (PLoP'96)}
}

% Beispielliteratur - Online
@Online{Sm.2020,
  author   = {Hans Meyer},
  title    = {Berlin is cool},
  url      = {twitter.com/bvg_kampagne},
  urldate  = {2020-06-14}
}

% Beispielliteratur - book
@book{Spitta.1989,
	abstract = {Als erste Monographie im deutschsprachigen Raum vermittelt das vorliegende Buch eine Konstruktionslehre des Software Engineering {\"u}ber den gesamten Lebenszyklus eines Softwareproduktes. W{\"a}hrend Software-Technologie {\"u}blicherweise in Hochschulen oder Softwareh{\"a}usern entsteht, wird hier eine Technologie dargestellt, die bei Anwendern entstanden ist. Nur Anwender sind in gro{\ss}em Stil mit dem gesamten Lebenszyklus von Software konfrontiert, da sie {\"u}ber 50{\%} ihres DV-Personals f{\"u}r die Wartung der investierten Software einsetzen m{\"u}ssen. Es wird ein neues, objekt-orientiertes Vorgehensmodell f{\"u}r die Entwicklung kommerzieller Dialogsoftware vorgestellt. Die dabei besonders wichtige Funktion und die Erscheinungsformen des Prototyping im Software-Entwicklungsproze{\ss} werden konstruktiv gekl{\"a}rt, wobei der Aspekt der Kommunikation der am Entwicklungsproze{\ss} Beteiligten besonders herausgearbeitet wird. Das Buch vermittelt eine durchgehende, produktneutrale Methodik, hinter der 10 Jahre Industrieerfahrung, aber keine Verkaufsinteressen f{\"u}r bestimmte Hardware- oder Softwarewerkzeuge stehen. Trotzdem wird die Benutzung von Softwarewerkzeugen fundiert behandelt, da eine proze{\ss}orientierte Software-Entwicklung nur mit Werkzeugen m{\"o}glich ist. Neben den fr{\"u}hen Phasen, in denen Methoden zur Datenmodellierung und Prototyping als kommunikationsunterst{\"u}tzende Methode wesentlich sind, wird die {\textquotedbl}Phase{\textquotedbl} Wartung vertieft behandelt, in der die wichtigsten Entscheidungen bei der Evolution von Software fallen; hierzu wird auch ein praktisch eingesetztes Werkzeug skizziert. In einer Bibliographie sind sowohl grundlegende Quellen als auch aktuelle weiterf{\"u}hrende Literatur zusammengestellt},
	author = {Spitta, Thorsten},
	year = {1989},
	title = {Software engineering und prototyping: Eine Konstruktionslehre f{\"u}r administrative Softwaresysteme},
	keywords = {Computer science;Database management;Management information systems;Software engineering},
	address = {Berlin},
	publisher = {Springer},
	isbn = {9783642955204},
	series = {Springer Compass},
	doi = {10.1007/978-3-642-95519-8}
}



@Comment{jabref-meta: databaseType:biblatex;}
